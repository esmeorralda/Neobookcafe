<div class="max-w-2xl mx-auto bg-white p-6 rounded-xl shadow space-y-6">
  <h2 class="text-xl font-bold text-gray-800">
    <%= @note.book&.title.presence || "ÏÉàÎ°úÏö¥ Î©îÎ™®" %>
  </h2>

  <%= form_with(model: @note, local: true) do |f| %>

    <!-- üìò Ï±Ö ÏÑ†ÌÉù -->
    <!-- üìò Ï±Ö ÏÑ†ÌÉù -->
<div class="mb-4" id="book_select_container">
  <%= label_tag :book_id, "Ï±Ö ÏÑ†ÌÉù ÎòêÎäî ÏÉàÎ°ú ÏûÖÎ†•", class: "block font-medium mb-1" %>
  <%= select_tag "note[book_id]",
      options_for_select(
        [["üìñ ÏÉàÎ°úÏö¥ Ï±Ö ÏûÖÎ†•", "new_book"]] + current_user.books.pluck(:title, :id),
        selected: @note.book_id
      ),
      prompt: "Ï±ÖÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî",
      class: "w-full border border-gray-300 rounded p-2",
      id: "book_select" %>
</div>

<!-- ÏÉà Ï±Ö Ï†úÎ™© ÏûÖÎ†• ÌïÑÎìú (Ï¥àÍ∏∞Ïóî Ïà®ÍπÄ) -->
<div id="new_book_title_field" class="mb-4 hidden">
  <%= label_tag "note[book_title]", "ÏÉà Ï±Ö Ï†úÎ™©", class: "block font-medium mb-1" %>
  <%= text_field_tag "note[book_title]", nil, placeholder: "Ïòà: ÎÇòÎØ∏Ïïº Ïû°ÌôîÏ†êÏùò Í∏∞Ï†Å", class: "w-full border border-gray-300 rounded p-2" %>
</div>

  <%= f.label :chapter, "Î≤îÏúÑ", class: "block text-sm font-medium text-gray-700" %>
    <!-- ‚úèÔ∏è ÌéòÏù¥ÏßÄ, Î™©Ï∞®, ÏÉâÏÉÅ -->
    <div class="grid grid-cols-2 gap-4">
    
    <!-- ‚úÖ Ï™Ω Î≤îÏúÑ ÏûÖÎ†• Ìïú Ï§ÑÏóê ÌëúÏãú -->
<div class="flex items-center space-x-2">
  <%= f.number_field :page_from, class: "w-20 border border-gray-300 rounded-md p-2 text-sm" %>
  <span class="text-sm text-gray-700">Ï™ΩÎ∂ÄÌÑ∞ ~ </span>
  <%= f.number_field :page_to, class: "w-20 border border-gray-300 rounded-md p-2 text-sm" %>
  <span class="text-sm text-gray-700">Ï™ΩÍπåÏßÄ</span>
</div>



<!-- Î™©Ï∞® ÎìúÎ°≠Îã§Ïö¥ ÏòÅÏó≠ -->
<!-- Î™©Ï∞® ÎìúÎ°≠Îã§Ïö¥ ÏòÅÏó≠ -->
<div class="mb-4">
  <%= label_tag :chapter_id, "Î™©Ï∞® ÏÑ†ÌÉù ÎòêÎäî ÏÉàÎ°ú ÏûÖÎ†•", class: "block font-medium mb-1" %>
  <%= select_tag "note[chapter_id]",
      options_for_select(
        (@chapters || []).map { |ch| [ch.title, ch.id] } + [["‚ûï ÏÉàÎ°úÏö¥ Î™©Ï∞® ÏûÖÎ†•", "new_chapter"]],
        selected: @note.chapter_id
      ),
      prompt: "Î™©Ï∞®Î•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî",
      class: "w-full border border-gray-300 rounded p-2",
      id: "chapter_select" %>
</div>


<!-- ÏÉàÎ°úÏö¥ Î™©Ï∞® ÏûÖÎ†•ÎûÄ (Ï¥àÍ∏∞Ïóî Ïà®ÍπÄ) -->
<div id="new_chapter_title_field" class="mb-4 hidden">
  <%= label_tag "note[chapter_title]", "ÏÉà Î™©Ï∞® Ï†úÎ™©", class: "block font-medium mb-1" %>
  <%= text_field_tag "note[chapter_title]", nil, placeholder: "Ïòà: 1Ïû• ÏãúÏûëÌïòÍ∏∞", class: "w-full border border-gray-300 rounded p-2" %>
</div>

<div class="col-span-2">
  <%= f.label :color, "ÏÉâÏÉÅ", class: "block text-sm font-medium text-gray-700 mb-2" %>
  <div class="flex space-x-4">
    <% [['#FFFACD'], ['#ADD8E6'], ['#FFB6C1']].each_with_index do |(hex), index| %>
      <label class="cursor-pointer">
        <%= f.radio_button :color, hex, id: "color_#{index}", class: "hidden peer" %>
        <span class="w-8 h-8 rounded-full border-2 border-gray-300 peer-checked:ring-2 ring-offset-2 ring-blue-500 inline-block" style="background-color: <%= hex %>"></span>
      </label>
    <% end %>
  </div>
</div>

    <!-- üß† Î©îÎ™® ÏûÖÎ†• -->
  <div class="space-y-6"> <!-- Ï†ÑÏ≤¥ ÏÑ∏Î°ú Í∞ÑÍ≤© -->
  <div>
    <%= f.label :memo, "Î©îÎ™®Î•º ÎÇ®Í≤®Ï£ºÏÑ∏Ïöî", class: "block text-sm font-medium text-gray-700" %>
   <%= f.text_area :memo, rows: 10, class: "mt-1 block w-[600px] border border-gray-300 rounded-md shadow-sm p-3 resize-y" %>

  </div>

  <div class="flex justify-center gap-4">
    <%= f.submit "Ï†ÄÏû•", class: "bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-xl" %>
    <%= link_to "Ï∑®ÏÜå", new_note_path, class: "bg-gray-300 hover:bg-gray-400 text-gray-800 py-2 px-4 rounded-xl flex items-center justify-center" %>
    <% if @note.persisted? %>
      <%= link_to "ÏÇ≠Ï†ú", note_path(@note), method: :delete, data: { confirm: "Ï†ïÎßê ÏÇ≠Ï†úÌï†ÍπåÏöî?" }, class: "bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded-xl flex items-center justify-center" %>
    <% end %>
  </div>
</div>

  <% end %>
</div>
<!-- ‚úÖ JS: Ï±Ö ÏÑ†ÌÉù ‚Üí ÏÉà ÏûÖÎ†•ÎûÄ ÌëúÏãú + Î™©Ï∞® Î°úÎî© Î∞è ÏÉàÎ°úÏö¥ Î™©Ï∞® ÏûÖÎ†•ÎûÄ ÌÜ†Í∏Ä -->
<script>
document.addEventListener("DOMContentLoaded", function () {
  const bookSelect = document.getElementById("book_select");
  const newBookField = document.getElementById("new_book_title_field");

  const chapterSelectContainer = document.getElementById("chapter_select_container");
  const chapterSelect = document.getElementById("chapter_select");
  const newChapterField = document.getElementById("new_chapter_title_field");

  function toggleBookAndChapterFields() {
    if (bookSelect.value === "new_book") {
      newBookField.classList.remove("hidden");    // ÏÉà Ï±Ö ÏûÖÎ†•ÎûÄ Î≥¥ÏûÑ
      chapterSelectContainer.classList.remove("hidden"); // Î™©Ï∞® ÎìúÎ°≠Îã§Ïö¥ Î≥¥ÏûÑ
      newChapterField.classList.add("hidden"); // ÏÉà Î™©Ï∞® ÏûÖÎ†•ÎûÄ Ï¥àÍ∏∞Ïóî Ïà®ÍπÄ
    } else {
      newBookField.classList.add("hidden");      // ÏÉà Ï±Ö ÏûÖÎ†•ÎûÄ Ïà®ÍπÄ
      newChapterField.classList.add("hidden");   // ÏÉà Î™©Ï∞® ÏûÖÎ†•ÎûÄ Ïà®ÍπÄ
      chapterSelectContainer.classList.remove("hidden"); // Î™©Ï∞® ÎìúÎ°≠Îã§Ïö¥ Î≥¥ÏûÑ
    }
  }

  async function loadChapters(bookId) {
    try {
      const response = await fetch(`/books/${bookId}/chapters`);
      if (!response.ok) throw new Error("Failed to fetch chapters");
      const chapters = await response.json();

      chapterSelect.innerHTML = "";

      if (chapters.length > 0) {
        chapters.forEach(ch => {
          const option = document.createElement("option");
          option.value = ch.id;
          option.text = ch.title;
          chapterSelect.appendChild(option);
        });
      }

      // Ìï≠ÏÉÅ 'ÏÉàÎ°úÏö¥ Î™©Ï∞® ÏûÖÎ†•' ÏòµÏÖò Ï∂îÍ∞Ä
      const newOption = document.createElement("option");
      newOption.value = "new_chapter";
      newOption.text = "‚ûï ÏÉàÎ°úÏö¥ Î™©Ï∞® ÏûÖÎ†•";
      chapterSelect.appendChild(newOption);

    } catch (error) {
      console.error(error);
      chapterSelect.innerHTML = "";

      // Ïò§Î•ò ÏãúÏóêÎèÑ 'ÏÉàÎ°úÏö¥ Î™©Ï∞® ÏûÖÎ†•' ÏòµÏÖò Ï∂îÍ∞Ä
      const newOption = document.createElement("option");
      newOption.value = "new_chapter";
      newOption.text = "‚ûï ÏÉàÎ°úÏö¥ Î™©Ï∞® ÏûÖÎ†•";
      chapterSelect.appendChild(newOption);
    }
  }

  function toggleNewChapterField() {
    if (chapterSelect.value === "new_chapter") {
      newChapterField.classList.remove("hidden"); // ÏûÖÎ†• ÌïÑÎìú Î≥¥Ïó¨Ï£ºÍ∏∞
    } else {
      newChapterField.classList.add("hidden");    // ÏûÖÎ†• ÌïÑÎìú Ïà®Í∏∞Í∏∞
    }
  }

  bookSelect.addEventListener("change", () => {
    toggleBookAndChapterFields();

    if (bookSelect.value && bookSelect.value !== "new_book") {
      loadChapters(bookSelect.value);
    } else {
      chapterSelect.innerHTML = "";
    }
  });

  chapterSelect.addEventListener("change", toggleNewChapterField);

  // Ï¥àÍ∏∞ ÏÉÅÌÉú ÏÑ§Ï†ï
  toggleBookAndChapterFields();

  if (bookSelect.value && bookSelect.value !== "new_book") {
    loadChapters(bookSelect.value);
  }

  toggleNewChapterField();
});


</script>
