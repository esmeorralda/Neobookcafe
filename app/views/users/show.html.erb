<!-- app/views/users/show.html.erb -->
<div class="max-w-4xl mx-auto px-6 py-12 text-[#3e2f23]">
  <div class="flex justify-between items-start">
    <!-- 왼쪽: 이름 + 자기소개 -->
    <div>
      <div class="flex items-end">
        <h1 class="text-4xl font-bold text-[#3e2f23]">
          <%= @user.name || "User" %>
        </h1>
        <span class="ml-2 text-sm text-[#a09388] mb-1">님의 공간</span>
      </div>

      <!-- 자기소개 -->
      <p class="mt-4 text-sm italic text-[#3e2f23]">
        “<%= @user.self_intro.presence || '한줄 소개가 없습니다.' %>”
      </p>
    </div>

    <!-- 오른쪽 버튼: 본인만 보임 -->
    <% if current_user == @user %>
      <div class="space-y-2 text-sm text-right ml-4">
        <%= link_to "자기 소개 편집", edit_user_path(current_user), class: "block border border-[#3e2f23] px-4 py-2 hover:bg-[#f3ede3]" %>
        <%= link_to "개인 정보 수정", edit_user_registration_path, class: "block border border-[#3e2f23] px-4 py-2 hover:bg-[#f3ede3]" %>
      </div>
    <% end %>
  </div>

  <!-- 인용 슬라이더 -->
  <div id="intro-slider" class="relative overflow-hidden mt-10 border-y py-6 text-center text-lg text-[#3e2f23] italic">
  <% if @user.book_intros.where.not(quote: [nil, ""]).exists? %>
    <div id="intro-track" class="flex transition-transform duration-1500 ease-in-out">
      <% @user.book_intros.where.not(quote: [nil, ""]).each do |intro| %>
        <div class="flex-shrink-0 w-full px-4">
          <span class="block text-xl font-light mb-2">“<%= intro.quote %>”</span>
          <span class="block text-sm text-[#a09388]">&lt;<%= intro.book_title.presence || "책 제목" %>&gt; <%= intro.author_name.presence || "저자이름" %></span>
        </div>
      <% end %>
    </div>
    <!-- 좌우 버튼 -->
    <button id="prev-btn" class="absolute left-2 top-1/2 transform -translate-y-1/2 bg-[#3e2f23] text-white px-3 py-1 rounded opacity-70 hover:opacity-100">‹</button>
    <button id="next-btn" class="absolute right-2 top-1/2 transform -translate-y-1/2 bg-[#3e2f23] text-white px-3 py-1 rounded opacity-70 hover:opacity-100">›</button>
  <% else %>
    <div class="text-sm text-[#a09388] italic">
      책 소개 정보가 없습니다.
    </div>
  <% end %>
</div>

  <!-- 탭 메뉴 -->
  <% if current_user == @user %>
    <div class="mt-10 flex space-x-10 justify-center text-[#a09388] text-sm">
      <button data-tab="my_posts" class="tab-button border-b-2 border-[#3e2f23] pb-1 font-medium">내가 쓴 글</button>
      <button data-tab="drafted_posts" class="tab-button hover:text-[#3e2f23]">임시 저장 글</button>
      <button data-tab="liked_posts" class="tab-button hover:text-[#3e2f23]">좋아요 누른 글</button>
      <button data-tab="saved_posts" class="tab-button hover:text-[#3e2f23]">저장 한 글</button>
    </div>
  <% else %>
    <div class="mt-10 flex justify-center text-[#a09388] text-sm">
      <span class="border-b-2 border-[#3e2f23] pb-1 font-medium"><%= @user.name %>님의 글</span>
    </div>
  <% end %>

  <!-- 탭 컨텐츠 -->
  <div id="posts-container">
    <div id="my_posts" class="posts-tab">
      <%= render partial: "users/posts", locals: { posts: @my_posts } %>
      <%= render partial: "users/pagination", locals: { page_no: 1, total_pages: @my_posts_total_pages, tab: 'my_posts' } %>
    </div>

    <% if current_user == @user %>
      <div id="drafted_posts" class="posts-tab hidden">
        <%= render partial: "users/posts", locals: { posts: @drafted_posts } %>
        <%= render partial: "users/pagination", locals: { page_no: 1, total_pages: @drafted_posts_total_pages, tab: 'drafted_posts' } %>
      </div>

      <div id="liked_posts" class="posts-tab hidden">
        <%= render partial: "users/posts", locals: { posts: @liked_posts } %>
        <%= render partial: "users/pagination", locals: { page_no: 1, total_pages: @liked_posts_total_pages, tab: 'liked_posts' } %>
      </div>

      <div id="saved_posts" class="posts-tab hidden">
        <%= render partial: "users/posts", locals: { posts: @saved_posts } %>
        <%= render partial: "users/pagination", locals: { page_no: 1, total_pages: @saved_posts_total_pages, tab: 'saved_posts' } %>
      </div>
    <% end %>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    // 슬라이더 관련 코드 (생략 가능)
    const track = document.getElementById("intro-track");
    const slides = track ? track.children : [];
    const totalSlides = slides.length;
    let currentIndex = 0;

    const updateSlidePosition = () => {
      if(track) track.style.transform = `translateX(-${currentIndex * 100}%)`;
    };

    if(document.getElementById("prev-btn")) {
      document.getElementById("prev-btn").addEventListener("click", () => {
        currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
        updateSlidePosition();
      });
    }

    if(document.getElementById("next-btn")) {
      document.getElementById("next-btn").addEventListener("click", () => {
        currentIndex = (currentIndex + 1) % totalSlides;
        updateSlidePosition();
      });
    }

    setInterval(() => {
      currentIndex = (currentIndex + 1) % totalSlides;
      updateSlidePosition();
    }, 5000);

    // 탭 버튼 클릭 이벤트: 탭 컨텐츠 보이기/숨기기 & 스타일 토글 + AJAX 로드
    const tabButtons = document.querySelectorAll(".tab-button");
    const postsContainer = document.getElementById("posts-container");

    tabButtons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const targetTab = btn.dataset.tab;
        fetchPosts(targetTab, 1);
        updateTabStyles(targetTab);
      });
    });

    // 페이지네이션 클릭 이벤트 위임
    postsContainer.addEventListener("click", (e) => {
      if(e.target.classList.contains("pagination-link")) {
        e.preventDefault();
        const page = e.target.dataset.page;
        const tab = e.target.dataset.tab;
        fetchPosts(tab, page);
      }
    });
    const userId = <%= current_user ? current_user.id : @user.id %>;

    function fetchPosts(tab, page) {
      const url = `/users/${userId}/${tab}?page=${page}`;
  
      fetch(url, {
        headers: { "X-Requested-With": "XMLHttpRequest" }
      })
      .then(response => response.text())
      .then(html => {
        const targetDiv = document.getElementById(tab);
        if(targetDiv) {
          targetDiv.innerHTML = html;
        }
      })
      .catch(console.error);
    }

    function updateTabStyles(activeTab) {
      tabButtons.forEach(b => {
        if(b.dataset.tab === activeTab) {
          b.classList.add("border-b-2", "border-[#3e2f23]", "font-medium");
          b.classList.remove("text-[#a09388]");
          document.querySelectorAll(".posts-tab").forEach(tabDiv => {
            tabDiv.classList.toggle("hidden", tabDiv.id !== activeTab);
          });
        } else {
          b.classList.remove("border-b-2", "border-[#3e2f23]", "font-medium");
          b.classList.add("text-[#a09388]");
        }
      });
    }

    // 초기 탭 스타일 세팅 (기본 my_posts)
    updateTabStyles('my_posts');
  });
</script>
