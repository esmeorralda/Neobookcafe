<!-- app/views/posts/show.html.erb -->

 <div id="report-modal"
     class="fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50 hidden">
  <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-md border border-gray-300">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-lg font-semibold text-center w-full">신고하기</h2>
      <button id="report-close" class="text-gray-500 hover:text-gray-800 text-2xl absolute top-4 right-6">&times;</button>
    </div>
    
   <textarea id="report-content" class="w-full border border-gray-300 rounded p-2 mb-4"
          rows="4" placeholder="신고 내용을 입력하세요"></textarea>

<div class="flex justify-end space-x-2">
  <button id="report-cancel" class="px-3 py-1 border rounded text-gray-600">취소</button>
<button id="report-submit" type="button" class="px-3 py-1 bg-red-500 text-white rounded" data-post-id="<%= @post.id %>">제출</button>


</div>

  </div>
</div>

<head>
  <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/font-kopub@1.0/kopubbatang.min.css">
</head>
<%# <!-- 드래그 후 뜨는 댓글 버튼 -->
<div id="highlight-comment-btn"
     class="hidden absolute px-2 py-1 text-xs bg-[#c9a77e] text-white rounded shadow cursor-pointer"
     style="z-index: 99999;">
  하이라이트 댓글 달기
</div> %>

<div class="max-w-4xl mx-auto px-4 py-10 font-serif">
  <!-- 제목 -->
  <div class="flex items-start justify-between mb-6">
    <div>
      <h1 class="text-3xl font-semibold  text-[#2c1a0d] mb-2"><%= @post.title %></h1>
      <p class="text-sm text-gray-700">
        책 제목 <%= @post.book_title %> (<%= @post.book_author %>)
      </p>
    </div>
    <div class="text-right text-sm text-gray-500 space-y-1">
      <div class="flex flex-col items-end space-y-2">
       
              <div class="flex items-center justify-end space-x-4 mb-2">
        <!-- 조회수 -->
        <div class="flex items-center">
          <%= image_tag "icon/post/viewCount.svg", class: "w-4 h-4 mr-1", alt: "조회수" %>
          <span class="text-xs"><%= @post.view_count.to_i %>회</span>
        </div>
        <!-- 댓글 -->
        <div class="flex items-center">
          <%= image_tag "icon/post/comments.svg", class: "w-4 h-4 mr-1", alt: "댓글" %>
          <span class="text-xs"><%= @post.comments.count %>개</span>
        </div>
        <!-- 좋아요 -->
        <div class="flex items-center">
          <%= image_tag "icon/post/likes.svg", class: "w-4 h-4 mr-1", alt: "좋아요" %>
          <span class="text-xs"><%= @post.like_count.to_i %>개</span>
        </div>
      </div>
   
      </div>
      
      <p class="text-xs text-gray-500 text-right">
        작성자 <%= @post.user.name %>, <%= @post.created_at.strftime('%Y년 %-m월 %-d일') %> 씀
      </p>
           <% if user_signed_in? %>


          <div class="flex justify-end">
          <!-- Add like button before bookmark button -->
          <% if user_signed_in? %>
            <% like = @post.likes.find_by(user: current_user) %>
            <% if like %>
              <%= button_to like_path(like), 
                  method: :delete, 
                  params: { likeable_type: 'Post', likeable_id: @post.id },
                  class: "flex items-center mr-2" do %>
                <%= image_tag "icon/post/filledheart.svg", class: "w-5 h-5 text-red-500" %>
                <span class="ml-1 text-xs text-gray-600"><%= @post.likes.count %></span>
              <% end %>
            <% else %>
              <%= button_to likes_path(likeable_type: 'Post', likeable_id: @post.id),
                  method: :post,
                  class: "flex items-center mr-2" do %>
                <%= image_tag "icon/post/emptyheart.svg", class: "w-5 h-5 text-gray-400" %>
                <span class="ml-1 text-xs text-gray-600"><%= @post.likes.count %></span>
              <% end %>
            <% end %>
          <% else %>
            <div class="flex items-center mr-2">
              <%= image_tag "icon/post/emptyheart.svg", class: "w-5 h-5 text-gray-400" %>
              <span class="ml-1 text-xs text-gray-600"><%= @post.likes.count %></span>
            </div>
          <% end %>

          <!-- Existing bookmark button -->
          <% if user_signed_in? %>
            <% if current_user.bookmarked_posts.exists?(@post.id) %>
              <%= button_to post_unbookmark_path(@post), method: :delete, class: "flex items-center" do %>
                <%= image_tag "icon/post/Vector 41.svg", class: "w-4 h-6 fill-current text-[#97705E]" %>
              <% end %>
            <% else %>
              <%= button_to post_bookmark_path(@post), method: :post, class: "flex items-center" do %>
                <%= image_tag "icon/post/Vector 40.svg", class: "w-4 h-6 fill-current text-gray-400" %>
              <% end %>
            <% end %>
          <% end %>

          <% if user_signed_in? %>
  <%= button_tag type: 'button', class: "flex items-center", id: "report-button" do %>
    <%= image_tag "icon/post/report.svg", class: "w-6 h-6" %>
  <% end %>
<% end %>


        </div>
      <% end %>
    </div>
  </div>

  <hr class="border-t border-[#e3d5c6] mb-8" />

  <!-- 본문 블록 -->
  <div id="post-content" class="space-y-6 text-base leading-relaxed text-gray-800">
    <% @post.post_blocks.order(:position).each do |block| %>
      <div class="relative flex items-start" id="post-block-wrapper-<%= block.id %>">
        <div class="flex-1">
          <% case block.block_type %>
          <% when 'paragraph' %>
            <p id="post-block-<%= block.id %>" data-block-id="<%= block.id %>"><%= raw(block.content.gsub(/\r?\n/, '<br>')) %></p>
          <% when 'subtitle' %>
            <h2 id="post-block-<%= block.id %>" data-block-id="<%= block.id %>" class="text-lg font-semibold text-[#2c1a0d]"><%= block.content %></h2>
          <% when 'quote' %>
            <blockquote id="post-block-<%= block.id %>" data-block-id="<%= block.id %>" class="pl-4 border-l-4 border-[#2c1a0d] italic text-[#2c1a0d]">“<%= block.content %>”</blockquote>
          <% else %>
            <p id="post-block-<%= block.id %>" data-block-id="<%= block.id %>"><%= simple_format(block.content) %></p>
          <% end %>
        </div>

        <!-- 블럭 옆에 댓글 버튼 -->
        <div class="ml-3">
          <button type="button"
            class="text-xs px-2 py-1 border border-gray-300 rounded text-gray-600 hover:bg-gray-100"
            data-toggle-target="comment-form-<%= block.id %>">
             댓글 보기
          </button>
        </div>
      </div>

      <!-- 댓글 작성 폼, 기본 숨김 -->
      <div id="comment-form-<%= block.id %>" class="hidden mt-2 mb-10 border rounded p-4 bg-[#f9f6f2]">
       <% comments = Comment.where(post_block_id: block.id).order(created_at: :desc) %>

       
  <% if comments.any? %>
    <div class="space-y-3 max-h-40 overflow-y-auto border-b border-gray-300 pb-3">
      <% comments.each do |comment| %>
        <div>
          <p class="font-semibold text-gray-800 text-sm"><%= comment.user.name %></p>
          <p class="text-gray-700 text-sm mt-1"><%= comment.content %></p>
          <p class="text-xs text-gray-500 mt-1"><%= comment.created_at.strftime('%Y년 %-m월 %-d일 %H:%M') %></p>
        </div>
      <% end %>
    </div>
  <% else %>
    <p class="text-gray-500 text-sm italic mt-2">댓글이 없습니다.</p>
  <% end %>

        <%= form_with model: Comment.new, url: post_comments_path(@post), local: true do |f| %>
          <%= f.hidden_field :post_block_id, value: block.id %>
          <%= f.text_area :content, placeholder: "댓글을 작성해주세요", rows: 2, class: "w-full p-2 border rounded mb-2" %>
          <%= f.hidden_field :highlight_start, id: "highlight_start_#{block.id}" %>
          <%= f.hidden_field :highlight_end, id: "highlight_end_#{block.id}" %>
          <%= f.submit "댓글 등록", class: "px-4 py-1 bg-[#c9a77e] text-white rounded" %>
        <% end %>
      </div>
    <% end %>
  </div>

  <!-- 기존 전체 댓글 목록 (본문 아래) -->
  <div class="mt-10 space-y-6">
    <% @post.comments.where(parent_id: nil).where(post_block_id: nil).each do |comment| %>
      <div class="bg-[#f7f1eb] p-4 rounded">
        <!-- 댓글 작성자 -->
        <p class="text-sm text-gray-800 font-semibold"><%= comment.user.name %></p>

        <!-- 댓글 좋아요 개수 및 버튼 -->
        <p class="text-xs text-gray-500 flex items-center space-x-2">
          <span><%= comment.likes.count %>개 좋아요</span>
          <% if user_signed_in? %>
            <% like = comment.likes.find_by(user: current_user) %>
            <% if like %>
              <%= button_to "좋아요 취소", like_path(like), method: :delete, params: { likeable_type: like.likeable_type, likeable_id: like.likeable_id }, form_class: "inline" %>
            <% else %>
              <%= button_to "좋아요 추가", likes_path(likeable_type: "Comment", likeable_id: comment.id), method: :post, form_class: "inline" %>
            <% end %>
          <% end %>
        </p>

        <!-- 댓글 내용 -->
        <p class="text-sm text-gray-700 mt-1"><%= comment.content %></p>

        <!-- 댓글 작성일 및 답글쓰기 토글 (삭제하지 않음) -->
        <div class="text-xs text-gray-500 mt-1 flex justify-between items-center">
          <span><%= comment.created_at.strftime('%Y년 %-m월 %-d일') %></span>
          <a href="#" class="reply-toggle text-blue-500" data-target="reply-form-<%= comment.id %>">답글쓰기</a>
        </div>

        <!-- 대댓글 목록 -->
        <% comment.replies.each do |reply| %>
          <div class="ml-6 mt-4 p-3 bg-[#fcfaf8] border-l-4 border-[#c9a77e] rounded">
            <!-- 대댓글 작성자 -->
            <p class="text-sm text-gray-800 font-semibold"><%= reply.user.name %></p>

            <!-- 대댓글 좋아요 개수 및 버튼 -->
            <p class="text-xs text-gray-500 flex items-center space-x-2">
              <span><%= reply.likes.count %>개 좋아요</span>
              <% if user_signed_in? %>
                <% if reply.likes.exists?(user: current_user) %>
                  <%= button_to "좋아요 취소", like_path(reply.likes.find_by(user: current_user)), method: :delete, params: { likeable_type: "Comment", likeable_id: reply.id }, form_class: "inline" %>
                <% else %>
                  <%= button_to "좋아요 추가", likes_path(likeable_type: "Comment", likeable_id: reply.id), method: :post, form_class: "inline" %>
                <% end %>
              <% end %>
            </p>

            <!-- 대댓글 내용 -->
            <p class="text-xs text-gray-700 mt-1"><%= reply.content %></p>

            <!-- 대댓글 작성일 -->
            <p class="text-xs text-gray-500 mt-1"><%= reply.created_at.strftime('%Y년 %-m월 %-d일') %></p>
          </div>
        <% end %>

        <!-- 대댓글 입력 폼 -->
        <div id="reply-form-<%= comment.id %>" class="reply-form hidden mt-4 ml-6">
          <%= form_with model: Comment.new, url: post_comments_path(@post), local: true do |f| %>
            <%= f.hidden_field :post_id, value: @post.id %>
            <%= f.hidden_field :parent_id, value: comment.id %>
            <%= f.text_area :content, placeholder: "답글을 입력하세요", rows: 2, class: "w-full p-2 border rounded" %>
            <%= f.submit "답글 등록", class: "mt-2 px-4 py-1 bg-[#c9a77e] text-white rounded" %>
          <% end %>
        </div>
      </div>
    <% end %>

    
  </div>


  <!-- 전체 댓글 작성 폼 (본문 하단) -->
  <div class="mt-10">
    <%= form_with model: Comment.new, url: post_comments_path(@post), local: true do |f| %>
      <%= f.hidden_field :post_id, value: @post.id %>
      <%= f.text_area :content, placeholder: "댓글을 작성해주세요", rows: 3, class: "w-full p-2 border rounded" %>
      <%= f.submit "댓글 등록", class: "mt-2 px-4 py-2 bg-[#8b5e3c] text-white rounded" %>
    <% end %>
  </div>

</div>


<script>

  document.addEventListener('DOMContentLoaded', () => {
    // 1. 대댓글 답글쓰기 토글
    document.querySelectorAll('.reply-toggle').forEach(button => {
      button.addEventListener('click', event => {
        event.preventDefault();
        const targetId = button.dataset.target;
        const targetForm = document.getElementById(targetId);
        if (targetForm) {
          targetForm.classList.toggle('hidden');
        }
      });
    });

    // 2. 블럭 옆 댓글 달기 버튼 토글
    document.querySelectorAll('button[data-toggle-target]').forEach(button => {
      button.addEventListener('click', () => {
        const targetId = button.getAttribute('data-toggle-target');
        const targetForm = document.getElementById(targetId);
        if (targetForm) {
          targetForm.classList.toggle('hidden');
        }
      });
    });

    // 3. 하이라이트 댓글 버튼 처리 및 위치 조정
// 3. 하이라이트 댓글 버튼 처리 및 위치 조정
const floatingButton = document.getElementById('highlight-comment-btn');

document.getElementById('post-content').addEventListener('mouseup', (e) => {
  const selection = window.getSelection();
  if (!selection || selection.isCollapsed) {
    floatingButton.classList.add('hidden');
    return;
  }

  const range = selection.getRangeAt(0);
  const selectedText = selection.toString().trim();
  if (!selectedText) {
    floatingButton.classList.add('hidden');
    return;
  }

  const selectedElement = range.startContainer.parentElement;
  const block = selectedElement.closest('[data-block-id]');
  if (!block) {
    floatingButton.classList.add('hidden');
    return;
  }

  const parentBlockId = block.getAttribute('data-block-id');
  const blockText = block.textContent;
  const start = blockText.indexOf(selectedText);
  const end = start + selectedText.length;

  if (start < 0) {
    floatingButton.classList.add('hidden');
    return;
  }

  // 버튼 위치 조정
  const rect = range.getBoundingClientRect();
  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;

  floatingButton.style.top = (rect.top + scrollTop - floatingButton.offsetHeight - 15) + 'px';
  floatingButton.style.left = (rect.right + scrollLeft - floatingButton.offsetWidth + 3) + 'px';
  floatingButton.classList.remove('hidden');

  // 클릭 시 사이드 패널 열기
  floatingButton.onclick = () => {
    const panel = document.getElementById('highlight-sidebar-form');
    const blockInput = document.getElementById('highlight_block_id');
    const startInput = document.getElementById('highlight_start');
    const endInput = document.getElementById('highlight_end');

    if (panel && blockInput && startInput && endInput) {
      blockInput.value = parentBlockId;
      startInput.value = start;
      endInput.value = end;

      panel.classList.remove('hidden');
      const textarea = panel.querySelector('textarea');
      if (textarea) textarea.focus();
    }

    floatingButton.classList.add('hidden');
    selection.removeAllRanges();
  };
});

// 닫기 버튼
document.getElementById('highlight-cancel-btn')?.addEventListener('click', () => {
  document.getElementById('highlight-sidebar-form')?.classList.add('hidden');
});

// 스크롤, 클릭 등으로 버튼 숨기기
['scroll', 'mousedown', 'keyup'].forEach(evt => {
  window.addEventListener(evt, () => {
    floatingButton.classList.add('hidden');
  });


    });

  });

  // 신고 버튼 열기
document.getElementById('report-button')?.addEventListener('click', () => {
  const modal = document.getElementById('report-modal');
  modal?.classList.remove('hidden');
});


// 신고 모달 닫기
document.getElementById('report-close')?.addEventListener('click', () => {
  const modal = document.getElementById('report-modal');
  modal?.classList.add('hidden');
});

  document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById("report-modal");
    const closeBtn = document.getElementById("report-close");
    const cancelBtn = document.getElementById("report-cancel");
    const submitBtn = document.getElementById("report-submit");

    // 닫기 / 취소
    closeBtn.addEventListener("click", () => modal.classList.add("hidden"));
    cancelBtn.addEventListener("click", () => modal.classList.add("hidden"));

    // 제출
    submitBtn.addEventListener("click", () => {
      const content = document.getElementById("report-content").value;

      if (!content.trim()) {
        alert("신고 내용을 입력해주세요.");
        return;
      }

      // 예: post_id는 숨겨진 필드로 전달하거나, data 속성 등으로 받아야 함
      const postId = submitBtn.dataset.postId;

      fetch("/reports", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({
          report: {
            content: content,
            post_id: postId
          }
        })
      })
        .then(response => {
          if (response.ok) {
            alert("신고가 접수되었습니다.");
            modal.classList.add("hidden");
            document.getElementById("report-content").value = "";
          } else {
            alert("신고에 실패했습니다.");
          }
        })
        .catch(error => {
          alert("오류가 발생했습니다.");
          console.error(error);
        });
    });
  });

</script>
