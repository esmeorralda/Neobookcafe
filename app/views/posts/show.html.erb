<head>
  <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/font-kopub@1.0/kopubbatang.min.css">
  <meta name="csrf-token" content="<%= form_authenticity_token %>" />
  <style>
    /* 컨테이너가 flex가 될 때 본문과 댓글 사이드바가 나란히 */
    #post-container.grid-active {
      display: flex;
      gap: 2rem;
      max-width: 100vw;
      padding: 0 2rem;
      box-sizing: border-box;
      justify-content: space-between;
      align-items: flex-start;
    }

    /* 본문 너비 조정 */
    #left-column {
      flex-grow: 1;
      min-width: 500px;
      max-width: calc(100vw - 440px);
    }
#comment-sidebar {
  flex-shrink: 0;
  width: 500px;          /* 기존 400px에서 넓힘 */
  max-height: 95vh;      /* 기존 90vh에서 좀 더 세로로 길게 */
  overflow-y: auto;
  background-color: #f9f6f2;
  border-left: 1px solid #d1d5db;
  padding: 1rem;
  border-radius: 0 8px 8px 0;
  position: sticky;
  top: 3rem;             /* 상단 여유도 약간 조절 가능 */
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}

    .hidden {
      display: none !important;
    }

    /* 전체 댓글 입력 폼 컨테이너 */
    #root-comment-form {
      margin-top: 3rem;
    }

    /* 전체 댓글 폼 textarea */
    #root-comment-form textarea {
      width: 100%;
      padding: 0.5rem;
      border: 1px solid #d1c4b2;
      border-radius: 6px;
      resize: vertical;
      font-size: 0.9rem;
      font-family: inherit;
      box-sizing: border-box;
    }

    /* 전체 댓글 폼 버튼 */
    #root-comment-form button[type="submit"] {
      margin-top: 0.5rem;
      background-color: #b88b65;
      color: white;
      border: none;
      padding: 0.4rem 1rem;
      border-radius: 6px;
      cursor: pointer;
      font-size: 0.9rem;
      font-weight: 600;
      transition: background-color 0.3s ease;
    }
    #root-comment-form button[type="submit"]:hover {
      background-color: #a5774e;
    }

    /* 댓글 보기 버튼 */
    .comment-view-btn {
      font-size: 0.75rem;
      padding: 0.2rem 0.5rem;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: white;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }
    .comment-view-btn:hover {
      background-color: #f0eadf;
    }

    /* 댓글 사이드바 내부 제목 & 닫기 버튼 */
    #comment-sidebar > div:first-child {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1rem;
    }
    #close-comment-sidebar {
      font-size: 1.5rem;
      background: none;
      border: none;
      cursor: pointer;
      color: #666;
      transition: color 0.2s ease;
    }
    #close-comment-sidebar:hover {
      color: #333;
    }

    /* 댓글 목록 내부 스크롤 영역 */
    #comment-sidebar-content {
      overflow-y: auto;
      flex-grow: 1;
      min-height: 200px;
      border: none;

    }

    /* 댓글 폼 textarea 사이드바 안 */
    #comment-sidebar-content textarea {
      width: 100%;
      padding: 0.5rem;
      # border: 1px solid #d1c4b2;
      # border-radius: 6px;
      resize: vertical;
      font-size: 0.9rem;
      font-family: inherit;
      box-sizing: border-box;
      margin-bottom: 0.5rem;
    }

    /* 댓글 폼 버튼 사이드바 안 */
    #comment-sidebar-content button[type="submit"] {
      background-color: #b88b65;
      color: white;
      border: none;
      padding: 0.4rem 1rem;
      border-radius: 6px;
      cursor: pointer;
      font-size: 0.9rem;
      font-weight: 600;
      transition: background-color 0.3s ease;
    }
    #comment-sidebar-content button[type="submit"]:hover {
      background-color: #a5774e;
    }

    
  </style>
</head>

<body>
<div class="mx-auto min-h-screen py-10 px-4 font-serif">
  <!-- 본문 + 댓글 사이드바 컨테이너 -->
  <div id="post-container" class="max-w-4xl mx-auto">

    <!-- 왼쪽 컬럼 : 제목, 메타정보, 본문 -->
    <div id="left-column" class="space-y-6 text-gray-800">
      <!-- 제목 / 메타 정보 -->
      <div>
        <h1 class="text-3xl font-semibold text-[#2c1a0d] mb-2"><%= @post.title %></h1>
        <p class="text-sm text-gray-700 mb-2">
          책 제목 <%= @post.book_title %> (<%= @post.book_author %>)
        </p>
        <p class="text-sm text-gray-500 mb-4">
          <%= @post.user.name %> 씀, <%= @post.created_at.strftime('%Y년 %-m월 %-d일') %>
        </p>

        <div class="flex items-center space-x-6 mb-6">
          <div class="flex items-center space-x-1">
            <%= image_tag "icon/post/viewCount.svg", class: "w-4 h-4", alt: "조회수" %>
            <span class="text-xs"><%= @post.view_count.to_i %>회</span>
          </div>
          <div class="flex items-center space-x-1">
            <%= image_tag "icon/post/comments.svg", class: "w-4 h-4", alt: "댓글" %>
            <span class="text-xs"><%= total_comments_count(@post) %>개</span>
          </div>
          <div class="flex items-center space-x-1">
            <%= image_tag "icon/post/likes.svg", class: "w-4 h-4", alt: "좋아요" %>
            <span class="text-xs"><%= @post.like_count.to_i %>개</span>
          </div>
        </div>

        <% if user_signed_in? %>
          <div class="flex space-x-3 mb-6">
<% likeable = @post %>

<% liked = likeable.likes.exists?(user: current_user) %>

<%= form_with(
      url: liked ? like_path(likeable.likes.find_by(user: current_user)) : likes_path,
      method: liked ? :delete : :post,
      remote: true,
      html: { id: dom_id(likeable, :like_button), class: "like-form" },
      data: { disable_with: "처리 중..." }
    ) do |f| %>
  <%= hidden_field_tag :likeable_type, likeable.class.name %>
  <%= hidden_field_tag :likeable_id, likeable.id %>

<button type="submit" class="flex items-center space-x-1 focus:outline-none">
  <% if liked %>
    <%= image_tag "icon/post/filledheart.svg", class: "w-4 h-4" %>
  <% else %>
    <%= image_tag "icon/post/emptyheart.svg", class: "w-4 h-4" %>
  <% end %>
  <span class="text-xs"><%= likeable.likes.count %></span>
</button>

<% end %>

            <% if current_user.bookmarked_posts.exists?(@post.id) %>
              <%= button_to post_unbookmark_path(@post), method: :delete, class: "flex items-center" do %>
                <%= image_tag "icon/post/Vector 41.svg", class: "w-4 h-6 fill-current text-[#97705E]" %>
              <% end %>
            <% else %>
              <%= button_to post_bookmark_path(@post), method: :post, class: "flex items-center" do %>
                <%= image_tag "icon/post/Vector 40.svg", class: "w-4 h-6 fill-current text-gray-400" %>
              <% end %>
            <% end %>

            
          </div>
        <% end %>

        <hr class="border-t border-[#e3d5c6]" />
      </div>

      <!-- 본문 영역 -->
      <div id="post-content" class="space-y-6 text-base leading-relaxed">
        <% @post.post_blocks.order(:position).each do |block| %>
          <div class="relative flex items-start" id="post-block-wrapper-<%= block.id %>">
            <div class="flex-1">
              <% case block.block_type %>
              <% when 'paragraph' %>
                <p id="post-block-<%= block.id %>" data-block-id="<%= block.id %>"><%= raw(block.content.gsub(/\r?\n/, '<br>')) %></p>
              <% when 'subtitle' %>
                <h2 id="post-block-<%= block.id %>" data-block-id="<%= block.id %>" class="text-lg font-semibold text-[#2c1a0d]"><%= block.content %></h2>
              <% when 'quote' %>
                <blockquote id="post-block-<%= block.id %>" data-block-id="<%= block.id %>" class="pl-4 border-l-4 border-[#2c1a0d] italic text-[#2c1a0d]">“<%= block.content %>”</blockquote>
              <% else %>
                <p id="post-block-<%= block.id %>" data-block-id="<%= block.id %>"><%= simple_format(block.content) %></p>
              <% end %>
            </div>

            <% if block.block_type == 'paragraph' %>
            <div class="ml-3 flex-shrink-0">
              <button type="button"
                class="text-xs px-2 py-1 border border-gray-300 rounded text-gray-600 hover:bg-gray-100 comment-view-btn"
                data-block-id="<%= block.id %>">
                댓글 보기
              </button>
            </div>
            <% end %>
          </div>
        <% end %>
      </div>
  <hr class="border-t border-[#e3d5c6]" />
      <!-- ✅ 전체 댓글 작성 폼 (루트 댓글) 본문 바로 아래 -->
      <% if user_signed_in? %>
        <div id="root-comment-form">
          <%= form_with model: Comment.new, url: post_comments_path(@post), local: true do |f| %>
            <%= f.hidden_field :post_block_id, value: nil %>
              <%= f.hidden_field :post_id, value: @post.id %>
            <%= f.text_area :content, placeholder: "댓글을 남겨보세요", rows: 2 %>
            <button type="submit">댓글 등록</button>
          <% end %>
        </div>
      <% end %>

<div id="root-comment-list" class="mt-6 max-h-[600px] overflow-y-auto bg-[#f9f6f2] p-4 rounded-lg shadow-inner">

  <!-- 댓글 정렬 드롭다운 -->
  <div class="mb-4 flex items-center space-x-2">
    <label for="sort-comments" class="text-sm font-medium text-gray-700">댓글 정렬:</label>
    <select id="sort-comments" name="sort" class="border rounded px-2 py-1 text-sm" onchange="location = this.value;">
      <option value="<%= url_for(params.permit(:id).merge(sort: 'latest')) %>" <%= 'selected' if params[:sort] == 'latest' || params[:sort].blank? %>>최신순</option>
      <option value="<%= url_for(params.permit(:id).merge(sort: 'oldest')) %>" <%= 'selected' if params[:sort] == 'oldest' %>>오래된 순</option>
      <option value="<%= url_for(params.permit(:id).merge(sort: 'likes')) %>" <%= 'selected' if params[:sort] == 'likes' %>>좋아요 순</option>
    </select>
  </div>

  <%# 정렬 처리: params[:sort] 기준으로 @comments를 뷰에서 정렬 %>
  <%
    sorted_comments = case params[:sort]
    when 'oldest'
      @comments.sort_by(&:created_at)
    when 'likes'
      @comments.sort_by { |c| -c.likes.count }
    else
      @comments.sort_by(&:created_at).reverse
    end
  %>

  <% sorted_comments.each do |comment| %>
    <div class="bg-white rounded-lg shadow p-4 mb-4 border border-transparent last:mb-0">

      <div class="flex justify-between items-center border-b border-[#d1c4b2] pb-2 mb-2">
        <p class="font-semibold text-gray-800 text-sm"><%= comment.user.name %></p>

        <div class="flex items-center space-x-4">
          <p class="text-xs text-gray-500"><%= comment.created_at.strftime('%Y년 %-m월 %-d일 %H:%M') %></p>
          <%= render partial: 'comment_like', locals: { likeable: comment } %>
        </div>
      </div>

      <p class="text-gray-700 text-sm mb-3"><%= comment.content %></p>

      <!-- 대댓글 보기/답글 달기 토글 -->
      <button class="mt-1 text-xs text-[#b88b65] hover:text-[#a5774e] reply-toggle" data-comment-id="<%= comment.id %>">
        <% if comment.children.any? %>
          💬 <%= comment.children.count %>개의 답글 보기
        <% else %>
          답글 달기
        <% end %>
      </button>

      <!-- 대댓글 목록 + 입력 폼 -->
      <div class="ml-4 mt-3 space-y-2 hidden reply-container" id="reply-container-<%= comment.id %>">
        <% comment.children.order(created_at: :asc).each do |reply| %>
          <div class="border-l-2 pl-4 border-[#d1c4b2] bg-[#f2efe9] rounded-md py-3 shadow-sm">
            <p class="text-xs font-semibold text-gray-700"><%= reply.user.name %></p>
            <p class="text-xs text-gray-800 mt-1"><%= reply.content %></p>
            <p class="text-xs text-gray-400 mt-1"><%= reply.created_at.strftime('%Y년 %-m월 %-d일 %H:%M') %></p>
          </div>
        <% end %>

        <!-- 대댓글 입력 폼 -->
        <%= form_with model: Comment.new, url: post_comments_path(@post), local: true do |f| %>
          <%= f.hidden_field :post_block_id, value: nil %>
          <%= f.hidden_field :parent_id, value: comment.id %>
          <%= f.hidden_field :post_id, value: @post.id %>
          <%= f.text_area :content, placeholder: "답글을 작성해주세요", rows: 1, class: "w-full p-1 border border-[#d1c4b2] rounded text-sm mb-1 resize-none focus:outline-none focus:ring-1 focus:ring-[#b88b65]" %>
          <button type="submit" style="display: inline-block !important; background-color: #b88b65; color: white; padding: 6px 12px; font-size: 12px; border-radius: 4px; border: none; cursor: pointer;">
            답글 등록
          </button>
        <% end %>
      </div>
    </div>
  <% end %>
</div>


    </div>

    <!-- 오른쪽 컬럼 : 댓글 사이드바 -->
    <div id="comment-sidebar" class="hidden">
      <div>
        <h3 class="font-semibold text-lg">댓글</h3>
        <button id="close-comment-sidebar" aria-label="댓글 사이드바 닫기">&times;</button>
      </div>
      <div id="comment-sidebar-content" class="text-sm text-gray-700">
        <!-- JS로 댓글 및 폼을 로드 -->
      </div>
    </div>
  </div>

  <!-- 숨겨진 댓글 폼들 (초기에는 숨김) -->
  <div id="hidden-comment-forms" class="hidden">
    <% @post.post_blocks.order(:position).each do |block| %>
      <div id="comment-form-<%= block.id %>" class="hidden mt-2 mb-10 rounded p-4 bg-[#f9f6f2]">
        <% comments = Comment.where(post_block_id: block.id).order(created_at: :asc) %>
       <% if comments.any? %>
 <div class="space-y-3 overflow-y-auto pb-3" style="max-height: 500px;">
  <% comments.each do |comment| %>
    <div class="border-b border-[#d1c4b2] pb-2 mb-2">
      
      <!-- 상단: 유저이름 / 날짜 + 하트 -->
      <div class="flex justify-between items-start">
        <p class="font-semibold text-gray-800 text-sm"><%= comment.user.name %></p>

        <div class="flex items-center space-x-2">
          <p class="text-xs text-gray-500"><%= comment.created_at.strftime('%Y년 %-m월 %-d일 %H:%M') %></p>
          <%= render partial: 'comment_like', locals: { likeable: comment }  %>
        </div>
      </div>

      <!-- 본문 -->
      <p class="text-gray-700 text-sm mt-2"><%= comment.content %></p>
    </div>
  <% end %>
</div>

        <% else %>
          <p class="text-gray-500 text-sm italic mt-2">댓글이 없습니다.</p>
        <% end %>

        <%= form_with model: Comment.new, url: post_comments_path(@post), local: true do |f| %>
          <%= f.hidden_field :post_block_id, value: block.id %>
          <%= f.hidden_field :post_id, value: @post.id %>
          <%= f.text_area :content, placeholder: "댓글을 작성해주세요", rows: 2, class: "w-full p-2 border rounded mb-2" %>
          <button type="submit" class="px-4 py-1 bg-[#b88b65] text-white rounded">댓글 등록</button>
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const postContainer = document.getElementById('post-container');
    const commentSidebar = document.getElementById('comment-sidebar');
    const commentSidebarContent = document.getElementById('comment-sidebar-content');
    const closeBtn = document.getElementById('close-comment-sidebar');

    // 블록별 댓글 보기 버튼 클릭
    document.querySelectorAll('.comment-view-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const blockId = btn.getAttribute('data-block-id');

        // 댓글 사이드바 열기
        commentSidebar.classList.remove('hidden');
        postContainer.classList.add('grid-active');

        loadComments(blockId);
      });
    });

    // 댓글 사이드바 닫기 버튼 클릭
    closeBtn.addEventListener('click', () => {
      commentSidebar.classList.add('hidden');
      postContainer.classList.remove('grid-active');
      commentSidebarContent.innerHTML = '';
    });

    // 댓글 로드 함수 (블록별)
    function loadComments(blockId) {
      const commentForm = document.getElementById(`comment-form-${blockId}`);
      if (!commentForm) {
        commentSidebarContent.innerHTML = '<p>댓글이 없습니다.</p>';
        return;
      }
      commentSidebarContent.innerHTML = '';
      const clone = commentForm.cloneNode(true);
      clone.classList.remove('hidden');
      commentSidebarContent.appendChild(clone);

      // 댓글 폼 제출 이벤트 바인딩 (AJAX)
      const form = clone.querySelector('form');
form.addEventListener('submit', (e) => {
  e.preventDefault();
  const formData = new FormData(form);
  const token = document.querySelector('meta[name="csrf-token"]').content;

  fetch(form.action, {
    method: form.method.toUpperCase(),
    headers: {
      'Accept': 'application/json',
      'X-CSRF-Token': token
    },
    body: formData
  })
  .then(async (response) => {
    if (!response.ok) {
      // 실패 시 JSON 읽어서 에러 메시지 보여주기
      const errorData = await response.json();
      const errors = errorData.errors || ['댓글 등록 실패'];
      throw new Error(errors.join(', '));
    }
    return response.json();
  })
  .then(data => {
    alert('댓글이 성공적으로 등록되었습니다.');
    window.location.reload();  // 새로고침
  })
  .catch(error => alert(`댓글 등록에 실패했습니다: ${error.message}`));
});

    }

    // 신고 버튼 누르면 모달 열기
    const reportButton = document.getElementById('report-button');
    if (reportButton) {
      reportButton.addEventListener('click', () => {
        openReportModal();
      });
    }

    function openReportModal() {
      // 여기에 신고 모달을 구현하거나 라이브러리 호출
      alert('신고 모달을 열 예정입니다.');
    }

  });
// 대댓글 보기/답글 달기 버튼 클릭 시 대댓글 목록과 입력폼 토글
document.querySelectorAll('.reply-toggle').forEach(button => {
  button.addEventListener('click', () => {
    const commentId = button.getAttribute('data-comment-id');
    const replyContainer = document.getElementById(`reply-container-${commentId}`);

    if (!replyContainer) {
      console.log(`reply-container-${commentId} not found`);
      return;
    }

    const isHidden = replyContainer.classList.contains('hidden');
    console.log(`Toggling reply-container-${commentId}, currently hidden: ${isHidden}`);

    if (isHidden) {
      replyContainer.classList.remove('hidden');
      const replyCount = replyContainer.querySelectorAll('.border-l-2').length;
      if (replyCount === 0) {
        button.textContent = '답글 달기';
      } else {
        button.textContent = '대댓글 닫기';
      }
    } else {
      replyContainer.classList.add('hidden');
      const replyCount = replyContainer.querySelectorAll('.border-l-2').length;
      if (replyCount === 0) {
        button.textContent = '답글 달기';
      } else {
        button.textContent = `💬 ${replyCount}개의 답글 보기`;
      }
    }
  });
});


</script>
</body>
