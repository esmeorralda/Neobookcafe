<div class="mx-auto flex justify-center gap-8 bg-[#f7f1ea]">
<div class=" max-w-4xl w-full p-8 bg-[#f7f1ea] ">
  <%= form_with model: @post, local: true, class: "space-y-6", id: "post-form" do |f| %>
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-xl font-bold text-gray-800">새 게시글 작성</h1>
    </div>

    <!-- 기본 정보 -->
  <div class="flex justify-between items-center gap-2 max-w-4xl mx-auto bg-[#f7f1ea]">
  <div class="flex flex-col w-1/3">
    <label for="category-select" class="mb-1 block text-sm font-medium">게시판 선택</label>
    <select id="category-select" name="post[category]" class="border border-gray-300 p-2  bg-white w-full">
      <option value="thought">감상문</option>
      <option value="discussion">논설문</option>
      <option value="creation">창작물</option>
      <option value="board">자유게시글</option>
    </select>
  </div>

  <div class="flex flex-col w-1/2">
    <label for="book_title" class="mb-1 block text-sm font-medium">책 제목</label>
    <input type="text" id="book_title" name="post[book_title]" class="border border-gray-300 p-2  bg-white w-full" />
  </div>

  <div class="flex flex-col w-1/3">
    <label for="book_author" class="mb-1 block text-sm font-medium">책 저자</label>
    <input type="text" id="book_author" name="post[book_author]" class="border border-gray-300 p-2  bg-white w-full" />
  </div>
</div>


    <div class="text-sm">
      <%= f.label :title, "게시글 제목", class: "block mb-1" %>
      <%= f.text_field :title, class: "w-full border border-gray-300 p-2   bg-white" %>
    </div>

    <!-- 장르 선택 -->
    <div id="genre-container">
      <span class="text-sm mr-2">장르</span>

      <% ["철학", "문학", "역사", "사회", "경제", "과학/기술"].each do |genre| %>
        <label class="mr-2 text-sm genre-default">
          <%= radio_button_tag "genres[]", genre %> <%= genre %>
        </label>
      <% end %>

      <% ["시", "에세이", "소설"].each do |genre| %>
        <label class="mr-2 text-sm genre-creation hidden">
          <%= radio_button_tag "genres[]", genre %> <%= genre %>
        </label>
      <% end %>

      <% ["책 추천", "책 홍보", "작가 이야기", "독서팁/습관", "책 관련 행사 홍보", "책 Q&A", "기타"].each do |genre| %>
        <label class="mr-2 text-sm genre-board hidden">
          <%= radio_button_tag "genres[]", genre %> <%= genre %>
        </label>
      <% end %>

      <label class="ml-4 text-sm">
        <%= check_box_tag :allow_comments, true %> 댓글 허용
      </label>
    </div>

    <!-- 본문 (종이 느낌 영역) -->
    <div id="blocks-container" class="bg-white p-6  shadow mt-4" style="min-height: 800px; max-height: 1200px; overflow-y: auto; font-family: 'Noto Sans KR', sans-serif;">
      <!-- 자바스크립트로 동적 블록 생성 -->
    </div>

  <% end %>
</div>
 <div class="mt-10 flex flex-col space-y-2">
      <button type="button" class="border border-gray-300 bg-white px-3 py-1 text-sm">임시 저장</button>
      <%= button_tag "업로드", type: "submit", form: "post-form", class: "bg-[#5d3b2e] text-white px-4 py-1  text-sm" %>
    </div>
  </div>


<style>
  #blocks-container {
   font-family: serif;
  border: 1px solid #ddd;
  box-shadow: inset 0 0 5px #eee;
  padding: 1rem 1.5rem;
  font-family: 'Noto Sans KR', sans-serif;
  min-height: 800px;
  max-height: 1200px;
  overflow-y: auto;
  line-height: 1.4; /* 워드 같은 기본 줄간격 */
}

.block {
  position: relative;
  padding: 0; /* 블록 내부 여백 없앰 */
  margin-bottom: 0.3rem; /* 블록 간격 아주 좁게 */
  border-bottom: none; /* 구분선 제거하거나 필요시 넣기 */
}

.block textarea {
  width: 100%;
  font-size: 1rem;
 resize: none;
  background: transparent; /* 배경 투명 */
  outline: none;
  min-height: 1.4rem; /* 최소 한 줄 높이 */
  line-height: 1.4;
  margin: 0;
  padding: 0;
  font-family:  serif; /* 서체 변경 */
  overflow-y: hidden; /* 스크롤바 숨김 */
  height: auto; /* 높이 자동 조절 */
  border-color: black; 
}


/* 호버 시 컨트롤은 기존 유지 */
.block .block-controls {
  position: absolute;
  top: 0.1rem;
  right: 0.5rem;
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
}

.block:hover .block-controls {
  opacity: 1;
}

.block-controls select {
  font-size: 0.8rem;
  margin-right: 0.3rem;
}

.remove-block-btn {
  background: transparent;
  border: none;
  font-weight: bold;
  cursor: pointer;
  padding: 0;
  font-size: 0.9rem;
  line-height: 1;
}


/* 문단 스타일 */
.block-type-paragraph textarea {
  font-size: 1rem;
  color: #333;
  margin: 0 0 0.5rem 0;
  line-height: 1.4;
}

/* 인용 스타일 */
.block-type-quote textarea {
  # background-color: #f0f4f8;
  font-style: italic;
  border-left: 4px solid #2c1a0d;
  padding-left: 0.5rem;
  color: #2c1a0d;
}

/* 소제목 스타일 */
.block-type-subtitle textarea {
  background-color: #fff;
  font-weight: 600; /* font-semibold */
  font-size: 1.125rem; /* text-lg */
  color: #2c1a0d;
  margin: 1rem 0 0.5rem 0;
  padding-bottom: 0.25rem;
}
</style>

<script>
 document.addEventListener("DOMContentLoaded", () => {
  const container = document.getElementById("blocks-container");
  let index = 0;

  function autoResizeTextarea(textarea) {
    textarea.style.height = "auto";
    textarea.style.height = textarea.scrollHeight + "px";
  }

  function createBlock(type = "paragraph", content = "") {
    const block = document.createElement("div");
    block.classList.add("block");

    const textarea = document.createElement("textarea");
    textarea.name = `post[post_blocks_attributes][${index}][content]`;
    textarea.value = content;
    textarea.placeholder = "내용을 입력하세요";
    textarea.setAttribute("rows", 1);

    autoResizeTextarea(textarea);
    textarea.addEventListener("input", () => autoResizeTextarea(textarea));

    const select = document.createElement("select");
    select.name = `post[post_blocks_attributes][${index}][block_type]`;
    select.className = "block-type-selector";
  select.addEventListener("change", () => {
    block.classList.remove("block-type-paragraph", "block-type-quote", "block-type-subtitle");
    block.classList.add(`block-type-${select.value}`);
  });

    const options = [
      { val: "paragraph", label: "문단" },
      { val: "quote", label: "인용" },
      { val: "subtitle", label: "소제목" }
    ];
    options.forEach(opt => {
      const option = document.createElement("option");
      option.value = opt.val;
      option.textContent = opt.label;
      if (opt.val === type) option.selected = true;
      select.appendChild(option);
    });

    const removeBtn = document.createElement("button");
    removeBtn.type = "button";
    removeBtn.textContent = "✕";
    removeBtn.className = "remove-block-btn";
    removeBtn.title = "블록 삭제";

    const controls = document.createElement("div");
    controls.className = "block-controls";
    controls.appendChild(select);
    controls.appendChild(removeBtn);

    block.appendChild(textarea);
    block.appendChild(controls);
    container.appendChild(block);

    textarea.focus();

    removeBtn.addEventListener("click", () => {
      container.removeChild(block);
    });

   textarea.addEventListener("keydown", (e) => {
  if (e.key === "Enter" && !e.shiftKey) {
    e.preventDefault();
    const blocks = Array.from(container.querySelectorAll(".block textarea"));
    const currentIndex = blocks.indexOf(textarea);

    if (currentIndex < blocks.length - 1) {
      // 다음 블록이 있으면 새 블록 추가하지 않고 다음 블록으로 포커스 이동
      blocks[currentIndex + 1].focus();
      blocks[currentIndex + 1].setSelectionRange(0, 0);
    } else {
      // 마지막 블록이면 새 블록 생성
      createBlock();
    }
  }
});


    index++;
  }

  // 1) 블록 생성
  createBlock();

  // 2) 블록이 다 생성된 직후에 URL 대체 (replaceState)
  history.replaceState({}, '', "<%= posts_path %>");

  // 3) 카테고리 토글
  const categorySelect = document.getElementById("category-select");

    function toggleGenres() {
      const selected = categorySelect.value;
      document.querySelectorAll(".genre-default").forEach(el => el.classList.toggle("hidden", selected !== "thought" && selected !== "discussion"));
      document.querySelectorAll(".genre-creation").forEach(el => el.classList.toggle("hidden", selected !== "creation"));
      document.querySelectorAll(".genre-board").forEach(el => el.classList.toggle("hidden", selected !== "board"));
    }

  categorySelect.addEventListener("change", toggleGenres);
  toggleGenres();
});

  function autoResizeTextarea(textarea) {
  textarea.style.height = 'auto'; // 초기화
  textarea.style.height = textarea.scrollHeight + 'px'; // 내용 높이에 맞게 설정
}

document.querySelectorAll('.block textarea').forEach(textarea => {
  autoResizeTextarea(textarea); // 초기 로드 시 조절
  textarea.addEventListener('input', () => autoResizeTextarea(textarea)); // 입력 시마다 조절
});


</script>
