<div class="mx-auto flex justify-center gap-8 bg-[#f7f1ea] relative">
  <div class="max-w-4xl w-full p-8 bg-[#f7f1ea] rounded">
    <%= form_with model: @post, local: true, class: "space-y-6", id: "post-form" do |f| %>
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-xl font-bold text-gray-800">새 게시글 작성</h1>
      </div>

      <!-- 기본 정보 -->
      <div class="flex justify-between items-center gap-2 max-w-4xl mx-auto bg-[#f7f1ea]">
        <div class="flex flex-col w-1/3">
          <label for="category-select" class="mb-1  text-sm font-medium">게시판 선택</label>
          <select id="category-select" name="post[category]" class="border border-gray-300 p-2 bg-white w-full rounded">
            <option value="thought">감상문</option>
            <option value="discussion">논설문</option>
            <option value="creation">창작물</option>
            <option value="board">자유게시글</option>
          </select>
        </div>

        <div class="flex flex-col w-1/2">
          <label for="book_title" class="mb-1  text-sm font-medium">책 제목</label>
          <input type="text" id="book_title" name="post[book_title]" class="border border-gray-300 p-2 bg-white w-full rounded" />
        </div>

        <div class="flex flex-col w-1/3">
          <label for="book_author" class="mb-1  text-sm font-medium">책 저자</label>
          <input type="text" id="book_author" name="post[book_author]" class="border border-gray-300 p-2 bg-white w-full rounded" />
        </div>
      </div>

      <div class="text-sm">
        <%= f.label :title, "게시글 제목", class: " mb-1" %>
        <%= f.text_field :title, class: "w-full border border-gray-300 p-2 bg-white rounded" %>
      </div>

      <!-- 장르 선택 -->
      <div id="genre-container">
        <span class="text-sm mr-2">장르</span>

        <% ["철학", "문학", "역사", "사회", "경제", "과학/기술"].each do |genre| %>
          <label class="mr-2 text-sm genre-default">
            <%= radio_button_tag "genres[]", genre %> <%= genre %>
          </label>
        <% end %>

        <% ["시", "에세이", "소설"].each do |genre| %>
          <label class="mr-2 text-sm genre-creation hidden">
            <%= radio_button_tag "genres[]", genre %> <%= genre %>
          </label>
        <% end %>

        <% ["책 추천", "책 홍보", "작가 이야기", "독서팁/습관", "책 관련 행사 홍보", "책 Q&A", "기타"].each do |genre| %>
          <label class="mr-2 text-sm genre-board hidden">
            <%= radio_button_tag "genres[]", genre %> <%= genre %>
          </label>
        <% end %>

        <label class="ml-4 text-sm">
          <%= check_box_tag :allow_comments, true %> 댓글 허용
        </label>
      </div>

      <!-- 본문 (종이 느낌 영역) -->
      <div id="blocks-container" class="bg-white p-6 shadow mt-4 rounded" style="min-height: 800px; max-height: 1200px; overflow-y: auto; font-family: 'Noto Sans KR', sans-serif; line-height: 1.4;">
        <!-- 자바스크립트로 동적 블록 생성 -->
      </div>
    <% end %>
  </div>

  <!-- 오른쪽 세로 버튼들 -->
  <div class="flex flex-col space-y-2 sticky top-24 mt-10 " style="height: fit-content;">
    <button type="button" class="border border-gray-300 bg-white px-3 py-1 text-sm  ">임시 저장</button>
    <%= button_tag "업로드", type: "submit", form: "post-form", class: "bg-[#5d3b2e] text-white px-4 py-2 text-sm  " %>
  </div>
</div>

<style>
  #blocks-container {
    font-family: 'Noto Sans KR', sans-serif;
    border: 1px solid #ddd;
    box-shadow: inset 0 0 5px #eee;
    padding: 1rem 1.5rem;
    min-height: 800px;
    max-height: 1200px;
    overflow-y: auto;
    line-height: 1.4;
  }

  .block {
    position: relative;
    background: white;
    border-radius: 0.375rem;
    box-shadow: 0 0 0 transparent;
    transition: box-shadow 0.2s ease, border-color 0.2s ease;
    border: 1px solid transparent;
  }

  /* 포커스 또는 호버 시 보더, 그림자 */
  .block:hover,
  .block.focused {
    box-shadow: 0 4px 8px rgb(0 0 0 / 0.1);
    border-color: #5d3b2e;
  }

  /* 드롭다운 왼쪽 상단 */
  .block-controls-left {
    position: absolute;
    top: -1.5rem;
    left: 0.75rem;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s ease;
    font-size: 0.85rem;
  }

  /* 삭제 버튼 오른쪽 상단 */
  .block-controls-right {
    position: absolute;
    top: -1.5rem;
    right: 0.75rem;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s ease;
    font-size: 0.85rem;
    color: #dc2626;
    background: transparent;
    border: none;
    cursor: pointer;
    font-weight: bold;
  }

  /* 포커스 혹은 호버 시 컨트롤 표시 */
  .block:hover .block-controls-left,
  .block:hover .block-controls-right,
  .block.focused .block-controls-left,
  .block.focused .block-controls-right {
    opacity: 1;
    pointer-events: auto;
  }

  .block-controls-right:hover {
    color: #b91c1c;
  }

  .block textarea {
    width: 100%;
    font-size: 1rem;
    resize: none;
    background: transparent;
    outline: none;
    min-height: 1.4rem;
    line-height: 1.4;
    margin: 0;
    padding: 0;
    font-family: serif;
    overflow-y: hidden;
    height: auto;
    border: none;
  }

  /* 문단 스타일 (기본) */
.block-type-paragraph textarea {
  font-size: 1rem;
  color: #333;
  margin: 0 0 0.5rem 0;
  line-height: 1.4;
}

/* 인용 스타일 */
.block-type-quote textarea {
  font-style: italic;
  border-left: 4px solid #5d3b2e;
  padding-left: 0.5rem;
  color: #2c1a0d;
}

/* 소제목 스타일 */
.block-type-subtitle textarea {
  background-color: #fff;
  font-weight: 600; /* font-semibold */
  font-size: 1.125rem; /* text-lg */
  color: #2c1a0d;
  margin: 1rem 0 0.5rem 0;
  padding-bottom: 0.25rem;
}

</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const container = document.getElementById("blocks-container");
    let index = 0;

    function autoResizeTextarea(textarea) {
      textarea.style.height = "auto";
      textarea.style.height = textarea.scrollHeight + "px";
    }

    function createBlock(type = "paragraph", content = "") {
      const block = document.createElement("div");
      block.classList.add("block");
      block.classList.add(`block-type-${type}`);

      // textarea
      const textarea = document.createElement("textarea");
      textarea.name = `post[post_blocks_attributes][${index}][content]`;
      textarea.value = content;
      textarea.placeholder = "내용을 입력하세요";
      textarea.setAttribute("rows", 1);
      autoResizeTextarea(textarea);
      textarea.addEventListener("input", () => autoResizeTextarea(textarea));

      // 왼쪽 상단 드롭다운
      const select = document.createElement("select");
      select.name = `post[post_blocks_attributes][${index}][block_type]`;
      select.className = "block-type-selector block-controls-left";
      select.style.padding = "0.2rem 0.5rem";
      select.style.border = "1px solid #ccc";
      select.style.borderRadius = "0.25rem";
      select.style.background = "white";
      const options = [
        { val: "paragraph", label: "문단" },
        { val: "quote", label: "인용" },
        { val: "subtitle", label: "소제목" }
      ];
      options.forEach(opt => {
        const option = document.createElement("option");
        option.value = opt.val;
        option.textContent = opt.label;
        if (opt.val === type) option.selected = true;
        select.appendChild(option);
      });
      select.addEventListener("change", () => {
        block.classList.remove("block-type-paragraph", "block-type-quote", "block-type-subtitle");
        block.classList.add(`block-type-${select.value}`);
      });

      // 오른쪽 상단 삭제 버튼
      const removeBtn = document.createElement("button");
      removeBtn.type = "button";
      removeBtn.textContent = "삭제";
      removeBtn.className = "block-controls-right";
      removeBtn.title = "블록 삭제";

      // 컨트롤 그룹에 추가
      block.appendChild(select);
      block.appendChild(removeBtn);

      // textarea 추가
      block.appendChild(textarea);

      container.appendChild(block);

      textarea.focus();

      // 삭제 버튼 이벤트
      removeBtn.addEventListener("click", () => {
        container.removeChild(block);
      });

      // textarea 포커스/블러 시 block에 focused 클래스 토글
      textarea.addEventListener("focus", () => {
        block.classList.add("focused");
      });
      textarea.addEventListener("blur", () => {
        block.classList.remove("focused");
      });

      // 엔터키: 다음 블록으로 포커스 또는 새 블록 생성
      textarea.addEventListener("keydown", (e) => {
        if (e.key === "Enter" && !e.shiftKey) {
          e.preventDefault();
          const blocks = Array.from(container.querySelectorAll(".block textarea"));
          const currentIndex = blocks.indexOf(textarea);

          if (currentIndex < blocks.length - 1) {
            blocks[currentIndex + 1].focus();
            blocks[currentIndex + 1].setSelectionRange(0, 0);
          } else {
            createBlock();
          }
        }

        // 방향키 위, 아래로 블록간 이동
        if (e.key === "ArrowUp") {
          const blocks = Array.from(container.querySelectorAll(".block textarea"));
          const currentIndex = blocks.indexOf(textarea);
          if (currentIndex > 0 && textarea.selectionStart === 0) {
            e.preventDefault();
            blocks[currentIndex - 1].focus();
            blocks[currentIndex - 1].setSelectionRange(blocks[currentIndex - 1].value.length, blocks[currentIndex - 1].value.length);
          }
        }
        if (e.key === "ArrowDown") {
          const blocks = Array.from(container.querySelectorAll(".block textarea"));
          const currentIndex = blocks.indexOf(textarea);
          if (currentIndex < blocks.length - 1 && textarea.selectionStart === textarea.value.length) {
            e.preventDefault();
            blocks[currentIndex + 1].focus();
            blocks[currentIndex + 1].setSelectionRange(0, 0);
          }
        }
      });

      index++;
    }

    // 초기 블록 1개 생성
    createBlock();

    // 카테고리별 장르 토글
    const categorySelect = document.getElementById("category-select");
    function toggleGenres() {
      const selected = categorySelect.value;
      document.querySelectorAll(".genre-default").forEach(el => el.classList.toggle("hidden", selected !== "thought" && selected !== "discussion"));
      document.querySelectorAll(".genre-creation").forEach(el => el.classList.toggle("hidden", selected !== "creation"));
      document.querySelectorAll(".genre-board").forEach(el => el.classList.toggle("hidden", selected !== "board"));
    }
    categorySelect.addEventListener("change", toggleGenres);
    toggleGenres();

  });
</script>
